# ISA Flight Software - Real-Time Sequencer Simulation Makefile

# Compiler settings
CC = gcc
CFLAGS = -Wall -Wextra -Werror -pedantic -std=c99 -O2 -g
LDFLAGS = -lm

# Platform-specific settings
ifeq ($(OS),Windows_NT)
    # Windows-specific flags and libraries
    # Define WINDOWS_BUILD before including any headers to ensure our types.h is included first
    CFLAGS += -D_WIN32 -DWINDOWS_BUILD
    LDFLAGS += -lwinmm
else
    # Linux/Unix-specific flags
    CFLAGS += -D_POSIX_C_SOURCE=200809L
endif

# Directories
SRC_DIR = src
INCLUDE_DIR = include
BUILD_DIR = build
TEST_DIR = test

# Source files
SEQUENCER_SRC = $(wildcard $(SRC_DIR)/sequencer/*.c)
MAIN_SRC = main_sequencer_sim.c

# Object files
SEQUENCER_OBJ = $(patsubst $(SRC_DIR)/%.c,$(BUILD_DIR)/%.o,$(SEQUENCER_SRC))
MAIN_OBJ = $(BUILD_DIR)/main_sequencer_sim.o

# All object files
OBJS = $(SEQUENCER_OBJ) $(MAIN_OBJ)

# Target executable
TARGET = $(BUILD_DIR)/sequencer_sim

# Default target
all: directories $(TARGET)

# Create build directories
directories:
	@mkdir -p $(BUILD_DIR)
	@mkdir -p $(BUILD_DIR)/sequencer

# Compile main program
$(TARGET): $(OBJS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

# Compile main_sequencer_sim.c
$(BUILD_DIR)/main_sequencer_sim.o: $(MAIN_SRC)
	$(CC) $(CFLAGS) -I$(INCLUDE_DIR) -c -o $@ $<

# Compile sequencer source files
$(BUILD_DIR)/sequencer/%.o: $(SRC_DIR)/sequencer/%.c
	$(CC) $(CFLAGS) -I$(INCLUDE_DIR) -c -o $@ $<

# Clean build files
clean:
	rm -rf $(BUILD_DIR)

# Run the sequencer simulation
run: all
	./$(TARGET)

.PHONY: all clean run directories